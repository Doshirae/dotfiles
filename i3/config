# Set colors ==>
set $white #ADBAC0
set $red #6F694D
set $yellow #B2BB50
set $green #749253
set $cyan #669972
set $blue #607B8C
set $gray #393939
set $black #5E5E5E
set $background #121212
# <==


# Init
set $mod Mod4
font pango:Cantarell 9
floating_modifier $mod
workspace_auto_back_and_forth no
# Borders
new_window pixel 4
new_float pixel 4
set $Locker ~/.dotfiles/i3/lock.sh

# Hide borders
#hide_edge_borders none

# start a terminal
bindsym $mod+Return exec urxvtc ; workspace $WS2
bindsym $mod+Mod1+Return exec urxvtc -e tmux -2; workspace $WS2

# kill focused window
bindsym $mod+Shift+a kill

# Start program launcher
bindsym $mod+d exec --no-startup-id rofi -show run -opacity 80 -bw 0 -separator-style solid -hide-scrollbar -lines 5 -width 100 -location 6

# Screenshot
bindsym $mod+m exec "scrot '%Y-%m-%d_%H:%M:%S[Full].png' -ze 'mv $f /home/doshirae/Pictures/Screenshots/'"
bindsym $mod+Shift+m exec "sleep 1 && scrot '%Y-%m-%d_%H:%M:%S[Area].png' -zse 'mv $f /home/doshirae/Pictures/Screenshots/'"
bindsym $mod+Mod1+m exec "scrot '%Y-%m-%d_%H:%M:%S[Window].png' -zue 'mv $f /home/doshirae/Pictures/Screenshots/'"

# Sound section, do not edit ==>
################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

#exec -no-startup-id volumeicon
bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec --no-startup-id pulseaudio
exec --no-startup-id pa-applet
bindsym $mod+Ctrl+v exec pavucontrol

################################################################################################
# <==

# Screen brightness controls
exec xbacklight -set 100
bindsym XF86MonBrightnessDown exec xbacklight -dec # 5 
#&& notify-send "Luminosité : $(printf \"%.0f\" $(xbacklight))%"
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 
#&& notify-send "Luminosité : $(printf \"%.0f\" $(xbacklight))%"
# Sound control
bindsym XF86AudioRaiseVolume exec "amixer -q set Master 5%+"
bindsym XF86AudioLowerVolume exec "amixer -q set Master 5%-"
bindsym XF86AudioMute exec "amixer -q sset Master toggle"



# Start Applications
bindsym $mod+Ctrl+b exec urxvtc -e 'bmenu'
# bindsym $mod+Shift+f exec chromium --process-per-site
bindsym $mod+Shift+f exec firefox
bindsym $mod+F3 exec thunar
bindsym $mod+Shift+t exec claws-mail

# bindsym $mod+F3 exec ranger
bindsym $mod+t exec --no-startup-id pkill compton
bindsym $mod+Ctrl+t exec --no-startup-id compton -b --config ~/.config/compton.conf
bindsym $mod+Shift+n --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym $mod+Ctrl+x exec xkill

# Moving through windows ==>
#Change Focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# Alternate change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

#Move Focused Window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# Alternate move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# <==

# Miscellaneous stuff ==>
# split in horizontal orientation
bindsym $mod+c split h
# split in vertical orientation
bindsym $mod+v split v
# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
# toggle sticky
bindsym $mod+Shift+s sticky toggle
# focus the parent container
bindsym $mod+a focus parent
bindsym $mod+z focus child
# <==

# Workspace names ==>
set $WS1 1·  Browser
set $WS2 2·  Terminals
set $WS3 3·  Files
set $WS4 4·  Social
set $WS5 5·  Misc
set $WS6 6·  Music
set $WS8 8·  RSS
set $WS9 9·  Torrent
set $WS10 10⋅  Games
# <==


# Moving through workspaces ==>
# switch to workspace
bindsym $mod+1 workspace $WS1
bindsym $mod+2 workspace $WS2
bindsym $mod+3 workspace $WS3
bindsym $mod+4 workspace $WS4
bindsym $mod+5 workspace $WS5
bindsym $mod+6 workspace $WS6
bindsym $mod+7 workspace $WS7
bindsym $mod+8 workspace $WS8
bindsym $mod+9 workspace $WS9
bindsym $mod+0 workspace $WS10

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $WS1
bindsym $mod+Shift+2 move container to workspace $WS2
bindsym $mod+Shift+3 move container to workspace $WS3
bindsym $mod+Shift+4 move container to workspace $WS4
bindsym $mod+Shift+5 move container to workspace $WS5
bindsym $mod+Shift+6 move container to workspace $WS6
bindsym $mod+Shift+7 move container to workspace $WS7
bindsym $mod+Shift+8 move container to workspace $WS8
bindsym $mod+Shift+9 move container to workspace $WS9

# Move to workspace with focused container
bindsym $mod+Ctrl+1 move container to workspace number 1; workspace $WS1
bindsym $mod+Ctrl+2 move container to workspace number 2; workspace $WS2
bindsym $mod+Ctrl+3 move container to workspace number 3; workspace $WS3
bindsym $mod+Ctrl+4 move container to workspace number 4; workspace $WS4
bindsym $mod+Ctrl+5 move container to workspace number 5; workspace $WS5
bindsym $mod+Ctrl+6 move container to workspace number 6; workspace $WS6
bindsym $mod+Ctrl+7 move container to workspace number 7; workspace $WS7
bindsym $mod+Ctrl+8 move container to workspace number 8; workspace $WS8
bindsym $mod+Ctrl+9 move container to workspace number 9; workspace $WS9
# <==

# Open applications on specific workspaces ==>
assign [class="chromium"] $WS1
assign [class="Chromium"] $WS1
assign [class="Firefox"] $WS1
assign [class="firefox"] $WS1
assign [title="tmux"] $WS2
assign [title="urxvt"] $WS2
assign [class="Thunar"] $WS3
assign [class="Pidgin"] $WS4
assign [class="Thunderbird"] $WS4
assign [class="Claws-mail"] $WS4
assign [class="Transmission"] $WS9
assign [class="Liferea"] $WS8
assign [class="liferea"] $WS8
# <==

# Open specific applications in floating mode ==>
for_window [title="alsamixer"] floating enable border pixel 2
for_window [class="Calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [class=" "] floating enable
for_window [class="pinentry"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="Galculator"] floating enable border pixel 2
for_window [class="GParted"] floating enable border normal
for_window [class="Lightdm-gtk-greeter-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pamac-updater"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Thus"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable bporder normal
for_window [class="gpick"] floating enable
# <==

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Set shut down, restart and locking features ==>
bindsym $mod+i mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id /home/doshirae/.dotfiles/i3/i3exit.sh lock, mode "default"
    bindsym s exec --no-startup-id /home/doshirae/.dotfiles/i3/i3exit.sh suspend, mode "default"
    bindsym u exec --no-startup-id /home/doshirae/.dotfiles/i3/i3exit.sh switch_user, mode "default"
    bindsym e exec --no-startup-id /home/doshirae/.dotfiles/i3/i3exit.sh logout, mode "default"
    bindsym h exec --no-startup-id /home/doshirae/.dotfiles/i3/i3exit.sh hibernate, mode "default"
    bindsym r exec --no-startup-id /home/doshirae/.dotfiles/i3/i3exit.sh reboot, mode "default"
    bindsym Shift+s exec --no-startup-id /home/doshirae/.dotfiles/i3/i3exit.sh shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# <==

# Resize window (you can also use the mouse for that) ==>
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym l resize shrink height 5 px or 5 ppt
        bindsym odiaeresis resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# <==

# Lock screen
bindsym $mod+x exec --no-startup-id $Locker

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
bindsym --release Num_Lock  exec pkill -SIGRTMIN+11 i3blocks

# bar ==>
# bar toggle, hide or show 
# bar {
# 	status_command i3status
# 	position top
# 	separator_symbol " "
# 	workspace_buttons yes
#     tray_output             primary
# #	wheel_up_cmd nop
# #	wheel_down_cmd nop
# 	font pango:DejaVuSerif,Icons 10
# 	colors {
# 		separator $black
# 		background #222222
# 		statusline #b5429c
# 		#                  Border        Background    Font
# 		focused_workspace  #222222        #222222        $green
# 		active_workspace   #222222        #222222        $green
# 		inactive_workspace #222222        #222222        $red
# 		urgent_workspace   #222222        #222222        $yellow
# 		binding_mode $red $red $green
# 	}
# }
# <==

# Autostart applications ==>
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec --no-startup-id gnome-keyring-daemon
exec --no-startup-id nm-applet
#exec --no-startup-id xfce4-power-manager
exec --no-startup-id pamac-tray
#exec --no-startup-id compton -b --config ~/.config/compton.conf
#exec --no-startup-id xautolock -time 10 -locker $Locker
exec_always ~/.dotfiles/scripts/wallpaper.sh
exec mpd
exec_always xrdb ~/.Xresources
exec dunst &
# exec pidgin
exec --no-startup-id urxvtd -q -o -f
exec autocutsel
exec liferea
exec setxkbmap fr oss -option compose:menu
# <==

# Theme colours ==>
# Theme colors   Border	 Background Font    ???
client.focused   $red $red    $background  #000000
client.unfocused $background  $background     $red #000000
client.urgent    #151219 #151219    $background #000000
# <==

# i3-gaps ==>
#############################
### settings for i3-gaps: ###
#############################

# Disable window titlebars entirely
#for_window [class="^.*"] border pixel 2

# Set inner/outer gaps
gaps inner 0
#gaps outer 0

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Gap Mode ==>
# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# <==
# <==

exec_always "killall polybar; polybar -r top | tee -a ~/bar.log"
# vim:filetype=i3:foldmethod=marker:foldmarker=\=\=>,<\=\=:foldlevel=0
